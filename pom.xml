<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ocelot.io</groupId>
    <artifactId>rss-poller</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <properties>
        <!-- Define the version of OPEN HTML TO PDF in the properties section of your POM. -->
        <openhtml.version>0.0.1-RC16</openhtml.version>

    <!-- Spring support.-->
    <spring-boot-version>2.0.3.RELEASE</spring-boot-version>
    <spring_release_version>5.0.3.RELEASE</spring_release_version>

    <gson_version>2.8.2</gson_version>
    <google_collections_version>1.0</google_collections_version>
    <async_http_client_version>1.9.31</async_http_client_version>
    <guava_version>23.0</guava_version>
    <hamcrest_all_version>1.3</hamcrest_all_version>
    <jackson_databind_version>2.9.3</jackson_databind_version>
    <jackson_datatype_joda_version>2.9.3</jackson_datatype_joda_version>
    <junit_version>4.12</junit_version>
    <logback_classic_version>1.2.3</logback_classic_version>
    <jcl_over_slf4j_version>1.7.5</jcl_over_slf4j_version>

    </properties>

    <dependencies>
        <!-- Compile -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${spring-boot-version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-feed</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-module-kotlin</artifactId>
                    <groupId>com.fasterxml.jackson.module</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <!-- Used for my httpClient implementation (to make web service calls) -->
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
            <version>${async_http_client_version}</version>
        </dependency>



        <dependency>
            <!-- ALWAYS required. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-core</artifactId>
            <version>${openhtml.version}</version>
        </dependency>

        <dependency>
            <!-- Required for PDF output. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-pdfbox</artifactId>
            <version>${openhtml.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox-tools</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>net.sf.cssbox</groupId>
            <artifactId>pdf2dom</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.15</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>3.15</version>
        </dependency>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.10</version>
        </dependency>
        <dependency>
            <groupId>com.itextpdf.tool</groupId>
            <artifactId>xmlworker</artifactId>
            <version>5.5.10</version>
        </dependency>


        <!-- Bridge Logging from Java Common Logging to SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${jcl_over_slf4j_version}</version>
        </dependency>

        <!-- Send Logging from SLF4j to Logback -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback_classic_version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <!-- This plugin provides the tools needed to repackage the Spring Boot Jar into a runnable jar.
     Run this command to generate the runnable Spring Boot jar:
       mvn clean package spring-boot:repackage

     WARNING:  Make sure this plugin appears *after* the plugin that runs npm install
               Otherwise, the runnable JAR will not have the node_modules directory
-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring_boot_maven_plugin_version}</version>
                <configuration>
                    <addResources>true</addResources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>